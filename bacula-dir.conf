Director {                                        # define myself
  Name = clear-dir                                # имя сервиса hostname+dir
  DIRport = 9101                                  # порт, на котором ожтдает соединение сервис
  QueryFile = "/etc/bacula/scripts/query.sql"     # файл с запросами SQL
  WorkingDirectory = "/var/lib/bacula"
  PidDirectory = "/run/bacula"
  Maximum Concurrent Jobs = 20                    # максимальное количество одновременно выполняемых задач
  Password = "bacula"                             # используется для подключения к сервису из консоли
  Messages = Daemon
  DirAddress = 127.0.0.1
}

JobDefs {
  Name = "DefaultJob"       # имя
  Type = Backup             # тип задачи - резервное копирование (Backup) или восстановление (Restore)
  Level = Incremental       # тип резервного копирования
  Client = clear-fd         # имя клиента, который используется для доступа к файлам
  FileSet = "Catalog"       # имя набора файлов - то, что нужно бэкапить
  Schedule = "LocalDaily"   # имя расписания
  Storage = clear-sd        # имя хранилища
  Messages = Standard
  Pool = LocalPool          # имя пула
  SpoolAttributes = yes
  Priority = 10
  Write Bootstrap = "/var/lib/bacula/%c.bsr" # куда записывать файл с метаданными
}
JobDefs {
  Name = "DefaultJobMain"       # имя
  Type = Backup             # тип задачи - резервное копирование (Backup) или восстановление (Restore)
  Level = Incremental       # тип резервного копирования
  Client = node2-fd         # имя клиента, который используется для доступа к файлам
  FileSet = "Catalog"       # имя набора файлов - то, что нужно бэкапить
  Schedule = "LocalDaily"   # имя расписания
  Storage = clear-sd        # имя хранилища
  Messages = Standard
  Pool = LocalPool          # имя пула
  SpoolAttributes = yes
  Priority = 10
  Write Bootstrap = "/var/lib/bacula/%c.bsr" # куда записывать файл с метаданными
}

JobDefs {
  Name = "DefaultRestore"   # имя
  Type = Restore            # тип задачи - резервное копирование (Backup) или восстановление (Restore)
  Level = Incremental       # тип резервного копирования
  Client = clear-fd         # имя клиента, который используется для доступа к файлам
  FileSet = "Catalog"       # имя набора файлов - то, что нужно бэкапить
  Schedule = "LocalDaily"   # имя расписания
  Storage = clear-sd        # имя хранилища
  Messages = Standard
  Pool = LocalPool          # имя пула
  SpoolAttributes = yes
  Priority = 10
  Write Bootstrap = "/var/lib/bacula/%c.bsr" # куда записывать файл с метаданными
}

Catalog {
  Name = MyCatalog
  dbname = "bacula"; DB Address = "localhost"; dbuser = "bacula"; dbpassword = "ubuntu"
}

Messages {
  Name = Daemon
  mailcommand = "/usr/sbin/bsmtp -h localhost -f \"\(Bacula\) \<%r\>\" -s \"Bacula daemon message\" %r"
  mail = root = all, !skipped
  console = all, !skipped, !saved
  append = "/var/log/bacula/bacula.log" = all, !skipped
}

Pool {
  Name = LocalPool                    # имя пула
  Pool Type = Backup                  # тип пула, на данный момент доступно только это значение
  Recycle = yes                       # переиспользование не нужных больше томов
  AutoPrune = yes                     # включает автоматическое удаление данных, которые больше не нужны
  Volume Retention = 365 days         # сколько надо хранить резервные копии
  Maximum Volume Bytes = 50G          # максимальный размер тома
  Maximum Volumes = 100               # максимальное количество томов в пуле
  Label Format = "Local-"             # метка для файлов тома в файловой системе
}

Client {
  Name = clear-fd
  Address = localhost                 # хост, на котором ожидает соединений клиент
  FDPort = 9102
  Catalog = MyCatalog                 # каталог для метаданных, который мы создали ранее
  Password = "bacula"                 # password for FileDaemon
  File Retention = 60 days            # сколько хранить инфо в файлах (files)
  Job Retention = 6 months            # сколько хранить инфо в задачах (jobs)
  AutoPrune = yes                     # авто удалять данные о файлах и задачах по истечению срока
}

Client {
  Name = node2-fd
  Address = 192.168.43.86             # хост, на котором ожидает соединений клиент
  FDPort = 9102
  Catalog = MyCatalog                 # каталог для метаданных, который мы создали ранее
  Password = "bacula"                 # password for FileDaemon
  File Retention = 60 days            # сколько хранить инфо в файлах (files)
  Job Retention = 6 months            # сколько хранить инфо в задачах (jobs)
  AutoPrune = yes                     # авто удалять данные о файлах и задачах по истечению срока
}

FileSet {
  Name = "Local-configuration"
  Include {
    Options {
      signature = MD5
    }
    File = /root
  }
}
FileSet {
  Name = "System"
  Include {
    Options {
      signature = MD5
    }
    File = /etc
  }
}

Schedule {
  Name = "LocalDaily"
  Run = Level=Full daily at 06:10
}
Schedule {
  Name = "LocalWeeklyCycle"
  Run = Level=Full sun at 06:10
  Run = Level=Incremental mon-sat at 06:10
  Run = Level=Full monthly 1st sun at 06:10
}

Job {
  Name = "LocalBackup"            # имя задачи, будет исп. для ручного запуска и выводится в логах
  JobDefs = "DefaultJob"          # значение по умолчанию, которое мы определили ранее
  Enabled = yes                   # задача активна
  Level = Full                    # по умолчанию полная резервная копия
  FileSet="Local-configuration"   # набор файлов, должен совпадать с FileSet созданным ранее
  Schedule = "LocalDaily"         # набор файлов, должен совпадать с Schedule созданным ранее
  Storage = clear-sd              # хранилище, в которое сохраняется резервная копия
  Pool = "LocalPool"              # имя пула, созданного ранее
}

Job {
  Name = "System"                 # имя задачи, будет исп. для ручного запуска и выводится в логах
  JobDefs = "DefaultJob"          # значение по умолчанию, которое мы определили ранее
  Enabled = yes                   # задача активна
  Level = Full                    # по умолчанию полная резервная копия
  FileSet="System"                # набор файлов, должен совпадать с FileSet созданным ранее
  Schedule = "LocalDaily"         # набор файлов, должен совпадать с Schedule созданным ранее
  Storage = clear-sd              # хранилище, в которое сохраняется резервная копия
  Pool = "LocalPool"              # имя пула, созданного ранее
}

Job {
  Name = "SystemNode2"            # имя задачи, будет исп. для ручного запуска и выводится в логах
  JobDefs = "DefaultJobMain"      # значение по умолчанию, которое мы определили ранее
  Enabled = yes                   # задача активна
  Level = Full                    # по умолчанию полная резервная копия
  FileSet="System"                # набор файлов, должен совпадать с FileSet созданным ранее
  Schedule = "LocalDaily"         # набор файлов, должен совпадать с Schedule созданным ранее
  Storage = clear-sd              # хранилище, в которое сохраняется резервная копия
  Pool = "LocalPool"              # имя пула, созданного ранее
}

Job {
  Name = "Test"                   # имя задачи, будет исп. для ручного запуска и выводится в логах
  JobDefs = "DefaultJob"      # значение по умолчанию, которое мы определили ранее
  Enabled = yes                   # задача активна
  Level = Full                    # по умолчанию полная резервная копия
  FileSet="Catalog"               # набор файлов, должен совпадать с FileSet созданным ранее
  Schedule = "LocalDaily"         # набор файлов, должен совпадать с Schedule созданным ранее
  Storage = clear-sd              # хранилище, в которое сохраняется резервная копия
  Pool = "LocalPool"              # имя пула, созданного ранее
}

FileSet {
  Name = "Catalog"
  Include {
    Options {
      signature = MD5
    }
    File = /root
  }
}

Autochanger {
  Name = clear-sd
  Address = localhost
  SDPort = 9103
  Password = "bacula"
  Device = Local-Device
  Media Type = File
  Maximum Concurrent Jobs =10
  Autochanger = clear-sd
}

Console {
  Name = clear-mon
  Password = "bacula"
  CommandACL = status, .status
}

Messages {
  Name = Standard
  mailcommand = "/usr/sbin/bsmtp -h localhost -f \"\(Bacula) \<%r\>\" -s \"Bacula daemon message\" %r"
  mail = root = all, !skipped
  console = all, !skipped, !saved
  append = "/var/log/bacula/bacula.log" = all, !skipped
}


